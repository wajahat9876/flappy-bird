{"version":3,"names":["_types","require","_Node","_types2","_Enum","ColorFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","composeAndPush","cf1","save","decorateChildren","cf2","colorFilters","popAllAsOne","restore","cf","Skia","ColorFilter","MakeCompose","push","exports","MatrixColorFilterNode","NodeType","MatrixColorFilter","decorate","matrix","MakeMatrix","BlendColorFilterNode","BlendColorFilter","mode","color","Color","MakeBlend","BlendMode","enumKey","LinearToSRGBGammaColorFilterNode","LinearToSRGBGammaColorFilter","MakeLinearToSRGBGamma","SRGBToLinearGammaColorFilterNode","SRGBToLinearGammaColorFilter","MakeSRGBToLinearGamma","LumaColorFilterNode","LumaColorFilter","MakeLumaColorFilter","LerpColorFilterNode","LerpColorFilter","t","second","pop","first","Error","MakeLerp"],"sources":["ColorFilters.ts"],"sourcesContent":["import type { SkColorFilter } from \"../../../skia/types\";\nimport { BlendMode } from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  BlendColorFilterProps,\n  MatrixColorFilterProps,\n} from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes/Enum\";\nimport type { LerpColorFilterProps } from \"../../types/ColorFilters\";\nimport type { DeclarationContext } from \"../../types/DeclarationContext\";\n\nexport abstract class ColorFilterDeclaration<P> extends JsiDeclarationNode<P> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, type, props);\n  }\n\n  protected composeAndPush(ctx: DeclarationContext, cf1: SkColorFilter) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    const cf2 = ctx.colorFilters.popAllAsOne();\n    ctx.restore();\n    const cf = cf2 ? this.Skia.ColorFilter.MakeCompose(cf1, cf2) : cf1;\n    ctx.colorFilters.push(cf);\n  }\n}\n\nexport class MatrixColorFilterNode extends ColorFilterDeclaration<MatrixColorFilterProps> {\n  constructor(ctx: NodeContext, props: MatrixColorFilterProps) {\n    super(ctx, NodeType.MatrixColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { matrix } = this.props;\n    const cf = this.Skia.ColorFilter.MakeMatrix(matrix);\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class BlendColorFilterNode extends ColorFilterDeclaration<BlendColorFilterProps> {\n  constructor(ctx: NodeContext, props: BlendColorFilterProps) {\n    super(ctx, NodeType.BlendColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const { mode } = this.props;\n    const color = this.Skia.Color(this.props.color);\n    const cf = this.Skia.ColorFilter.MakeBlend(color, BlendMode[enumKey(mode)]);\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LinearToSRGBGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LinearToSRGBGammaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeLinearToSRGBGamma();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class SRGBToLinearGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.SRGBToLinearGammaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeSRGBToLinearGamma();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LumaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LumaColorFilter, null);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    const cf = this.Skia.ColorFilter.MakeLumaColorFilter();\n    this.composeAndPush(ctx, cf);\n  }\n}\n\nexport class LerpColorFilterNode extends ColorFilterDeclaration<LerpColorFilterProps> {\n  constructor(ctx: NodeContext, props: LerpColorFilterProps) {\n    super(ctx, NodeType.LerpColorFilter, props);\n  }\n\n  decorate(ctx: DeclarationContext) {\n    ctx.save();\n    this.decorateChildren(ctx);\n    const { t } = this.props;\n    const second = ctx.colorFilters.pop();\n    const first = ctx.colorFilters.pop();\n    ctx.restore();\n    if (!first || !second) {\n      throw new Error(\n        \"LerpColorFilterNode: missing two color filters as children\"\n      );\n    }\n    ctx.colorFilters.push(this.Skia.ColorFilter.MakeLerp(t, first, second));\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AAKA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AAIO,MAAeI,sBAAsB,SAAYC,wBAAkB,CAAI;EAC5EC,WAAWA,CAACC,GAAgB,EAAEC,IAAc,EAAEC,KAAQ,EAAE;IACtD,KAAK,CAACF,GAAG,EAAEC,IAAI,EAAEC,KAAK,CAAC;EACzB;EAEUC,cAAcA,CAACH,GAAuB,EAAEI,GAAkB,EAAE;IACpEJ,GAAG,CAACK,IAAI,CAAC,CAAC;IACV,IAAI,CAACC,gBAAgB,CAACN,GAAG,CAAC;IAC1B,MAAMO,GAAG,GAAGP,GAAG,CAACQ,YAAY,CAACC,WAAW,CAAC,CAAC;IAC1CT,GAAG,CAACU,OAAO,CAAC,CAAC;IACb,MAAMC,EAAE,GAAGJ,GAAG,GAAG,IAAI,CAACK,IAAI,CAACC,WAAW,CAACC,WAAW,CAACV,GAAG,EAAEG,GAAG,CAAC,GAAGH,GAAG;IAClEJ,GAAG,CAACQ,YAAY,CAACO,IAAI,CAACJ,EAAE,CAAC;EAC3B;AACF;AAACK,OAAA,CAAAnB,sBAAA,GAAAA,sBAAA;AAEM,MAAMoB,qBAAqB,SAASpB,sBAAsB,CAAyB;EACxFE,WAAWA,CAACC,GAAgB,EAAEE,KAA6B,EAAE;IAC3D,KAAK,CAACF,GAAG,EAAEkB,gBAAQ,CAACC,iBAAiB,EAAEjB,KAAK,CAAC;EAC/C;EAEAkB,QAAQA,CAACpB,GAAuB,EAAE;IAChC,MAAM;MAAEqB;IAAO,CAAC,GAAG,IAAI,CAACnB,KAAK;IAC7B,MAAMS,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAACS,UAAU,CAACD,MAAM,CAAC;IACnD,IAAI,CAAClB,cAAc,CAACH,GAAG,EAAEW,EAAE,CAAC;EAC9B;AACF;AAACK,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAEM,MAAMM,oBAAoB,SAAS1B,sBAAsB,CAAwB;EACtFE,WAAWA,CAACC,GAAgB,EAAEE,KAA4B,EAAE;IAC1D,KAAK,CAACF,GAAG,EAAEkB,gBAAQ,CAACM,gBAAgB,EAAEtB,KAAK,CAAC;EAC9C;EAEAkB,QAAQA,CAACpB,GAAuB,EAAE;IAChC,MAAM;MAAEyB;IAAK,CAAC,GAAG,IAAI,CAACvB,KAAK;IAC3B,MAAMwB,KAAK,GAAG,IAAI,CAACd,IAAI,CAACe,KAAK,CAAC,IAAI,CAACzB,KAAK,CAACwB,KAAK,CAAC;IAC/C,MAAMf,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAACe,SAAS,CAACF,KAAK,EAAEG,gBAAS,CAAC,IAAAC,aAAO,EAACL,IAAI,CAAC,CAAC,CAAC;IAC3E,IAAI,CAACtB,cAAc,CAACH,GAAG,EAAEW,EAAE,CAAC;EAC9B;AACF;AAACK,OAAA,CAAAO,oBAAA,GAAAA,oBAAA;AAEM,MAAMQ,gCAAgC,SAASlC,sBAAsB,CAAO;EACjFE,WAAWA,CAACC,GAAgB,EAAE;IAC5B,KAAK,CAACA,GAAG,EAAEkB,gBAAQ,CAACc,4BAA4B,EAAE,IAAI,CAAC;EACzD;EAEAZ,QAAQA,CAACpB,GAAuB,EAAE;IAChC,MAAMW,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAACoB,qBAAqB,CAAC,CAAC;IACxD,IAAI,CAAC9B,cAAc,CAACH,GAAG,EAAEW,EAAE,CAAC;EAC9B;AACF;AAACK,OAAA,CAAAe,gCAAA,GAAAA,gCAAA;AAEM,MAAMG,gCAAgC,SAASrC,sBAAsB,CAAO;EACjFE,WAAWA,CAACC,GAAgB,EAAE;IAC5B,KAAK,CAACA,GAAG,EAAEkB,gBAAQ,CAACiB,4BAA4B,EAAE,IAAI,CAAC;EACzD;EAEAf,QAAQA,CAACpB,GAAuB,EAAE;IAChC,MAAMW,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAACuB,qBAAqB,CAAC,CAAC;IACxD,IAAI,CAACjC,cAAc,CAACH,GAAG,EAAEW,EAAE,CAAC;EAC9B;AACF;AAACK,OAAA,CAAAkB,gCAAA,GAAAA,gCAAA;AAEM,MAAMG,mBAAmB,SAASxC,sBAAsB,CAAO;EACpEE,WAAWA,CAACC,GAAgB,EAAE;IAC5B,KAAK,CAACA,GAAG,EAAEkB,gBAAQ,CAACoB,eAAe,EAAE,IAAI,CAAC;EAC5C;EAEAlB,QAAQA,CAACpB,GAAuB,EAAE;IAChC,MAAMW,EAAE,GAAG,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC0B,mBAAmB,CAAC,CAAC;IACtD,IAAI,CAACpC,cAAc,CAACH,GAAG,EAAEW,EAAE,CAAC;EAC9B;AACF;AAACK,OAAA,CAAAqB,mBAAA,GAAAA,mBAAA;AAEM,MAAMG,mBAAmB,SAAS3C,sBAAsB,CAAuB;EACpFE,WAAWA,CAACC,GAAgB,EAAEE,KAA2B,EAAE;IACzD,KAAK,CAACF,GAAG,EAAEkB,gBAAQ,CAACuB,eAAe,EAAEvC,KAAK,CAAC;EAC7C;EAEAkB,QAAQA,CAACpB,GAAuB,EAAE;IAChCA,GAAG,CAACK,IAAI,CAAC,CAAC;IACV,IAAI,CAACC,gBAAgB,CAACN,GAAG,CAAC;IAC1B,MAAM;MAAE0C;IAAE,CAAC,GAAG,IAAI,CAACxC,KAAK;IACxB,MAAMyC,MAAM,GAAG3C,GAAG,CAACQ,YAAY,CAACoC,GAAG,CAAC,CAAC;IACrC,MAAMC,KAAK,GAAG7C,GAAG,CAACQ,YAAY,CAACoC,GAAG,CAAC,CAAC;IACpC5C,GAAG,CAACU,OAAO,CAAC,CAAC;IACb,IAAI,CAACmC,KAAK,IAAI,CAACF,MAAM,EAAE;MACrB,MAAM,IAAIG,KAAK,CACb,4DACF,CAAC;IACH;IACA9C,GAAG,CAACQ,YAAY,CAACO,IAAI,CAAC,IAAI,CAACH,IAAI,CAACC,WAAW,CAACkC,QAAQ,CAACL,CAAC,EAAEG,KAAK,EAAEF,MAAM,CAAC,CAAC;EACzE;AACF;AAAC3B,OAAA,CAAAwB,mBAAA,GAAAA,mBAAA"}