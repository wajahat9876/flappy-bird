{"version":3,"names":["_types","require","_types2","_Node","_RenderNode","inflate","Skia","box","dx","dy","tx","ty","RRectXY","XYWHRect","rect","x","y","width","height","rx","ry","deflate","BoxShadowNode","JsiDeclarationNode","constructor","ctx","props","NodeType","BoxShadow","decorate","_ctx","materialize","exports","BoxNode","JsiRenderNode","Box","renderNode","canvas","paint","defaultBox","opacity","getAlphaf","isRRect","shadows","_children","map","node","filter","n","shadow","inner","color","blur","spread","lPaint","Paint","setColor","Color","setAlphaf","setMaskFilter","MaskFilter","MakeBlur","BlurStyle","Normal","drawRRect","delta","Point","Math","abs","save","clipRRect","ClipOp","Intersect","outer","drawDRRect","restore"],"sources":["Box.ts"],"sourcesContent":["import type { SkRRect, Skia } from \"../../../skia/types\";\nimport { BlurStyle, ClipOp, isRRect } from \"../../../skia/types\";\nimport type { DrawingContext } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport type { BoxShadowProps, BoxProps } from \"../../types/Drawings\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport { JsiRenderNode } from \"../RenderNode\";\nimport type { DeclarationContext } from \"../../types/DeclarationContext\";\n\nconst inflate = (\n  Skia: Skia,\n  box: SkRRect,\n  dx: number,\n  dy: number,\n  tx = 0,\n  ty = 0\n) =>\n  Skia.RRectXY(\n    Skia.XYWHRect(\n      box.rect.x - dx + tx,\n      box.rect.y - dy + ty,\n      box.rect.width + 2 * dx,\n      box.rect.height + 2 * dy\n    ),\n    box.rx + dx,\n    box.ry + dy\n  );\n\nconst deflate = (\n  Skia: Skia,\n  box: SkRRect,\n  dx: number,\n  dy: number,\n  tx = 0,\n  ty = 0\n) => inflate(Skia, box, -dx, -dy, tx, ty);\n\nexport class BoxShadowNode extends JsiDeclarationNode<BoxShadowProps> {\n  constructor(ctx: NodeContext, props: BoxShadowProps) {\n    super(ctx, NodeType.BoxShadow, props);\n  }\n\n  decorate(_ctx: DeclarationContext) {\n    // do nothing\n  }\n\n  materialize() {\n    return this.props;\n  }\n}\n\nexport class BoxNode extends JsiRenderNode<BoxProps> {\n  constructor(ctx: NodeContext, props: BoxProps) {\n    super(ctx, NodeType.Box, props);\n  }\n\n  renderNode({ canvas, paint }: DrawingContext) {\n    const { box: defaultBox } = this.props;\n    const opacity = paint.getAlphaf();\n    const box = isRRect(defaultBox)\n      ? defaultBox\n      : this.Skia.RRectXY(defaultBox, 0, 0);\n    const shadows = this._children\n      .map((node) => {\n        if (node instanceof BoxShadowNode) {\n          return node.materialize();\n        }\n        return null;\n      })\n      .filter((n): n is BoxShadowProps => n !== null);\n    shadows\n      .filter((shadow) => !shadow.inner)\n      .map((shadow) => {\n        const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n        const lPaint = this.Skia.Paint();\n        lPaint.setColor(this.Skia.Color(color));\n        lPaint.setAlphaf(paint.getAlphaf() * opacity);\n        lPaint.setMaskFilter(\n          this.Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n        );\n        canvas.drawRRect(\n          inflate(this.Skia, box, spread, spread, dx, dy),\n          lPaint\n        );\n      });\n\n    canvas.drawRRect(box, paint);\n\n    shadows\n      .filter((shadow) => shadow.inner)\n      .map((shadow) => {\n        const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n        const delta = this.Skia.Point(10 + Math.abs(dx), 10 + Math.abs(dy));\n        canvas.save();\n        canvas.clipRRect(box, ClipOp.Intersect, false);\n        const lPaint = this.Skia.Paint();\n        lPaint.setColor(this.Skia.Color(color));\n        lPaint.setAlphaf(paint.getAlphaf() * opacity);\n\n        lPaint.setMaskFilter(\n          this.Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n        );\n        const inner = deflate(this.Skia, box, spread, spread, dx, dy);\n        const outer = inflate(this.Skia, box, delta.x, delta.y);\n        canvas.drawDRRect(outer, inner, lPaint);\n        canvas.restore();\n      });\n  }\n}\n"],"mappings":"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"}